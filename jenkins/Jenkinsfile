pipeline{
    environment{
        registry = "798653922524.dkr.ecr.eu-north-1.amazonaws.com/laravel-app-ecr-repo"
    }
    agent any
    stages{
        stage("Retrieving RDS credentials for container"){
            steps{
                echo "Writing DB secrets to env..."
                sh 'echo "DB_HOST=$(aws ssm get-parameter --name "rds-host" --query Parameter.Value --output text)" >> .env.example'
                sh 'echo "DB_DATABASE=$(aws ssm get-parameter --name "rds-database" --query Parameter.Value --output text)" >> .env.example'
                sh 'echo "DB_USERNAME=$(aws ssm get-parameter --name "rds-username" --query Parameter.Value --output text)" >> .env.example'
                sh 'echo "DB_PASSWORD=$(aws ssm get-parameter --name "rds-password" --with-decryption --query Parameter.Value --output text)" >> .env.example'
                echo "--------------------------OK--------------------------"
            }
        }
        stage("Building image"){
            steps{
                echo "Building app image..."
                sh "docker build -t ${registry} ."
                echo "--------------------------OK--------------------------"
            }
        }
        stage("ECR Authentication"){
            steps{
                echo "Logging to ECR..."
                sh "aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 798653922524.dkr.ecr.eu-north-1.amazonaws.com"
                echo "--------------------------OK--------------------------"
            }
        }
        stage("Pushing to ECR"){
            steps{
                echo "Pushing to ECR..."
                sh "docker push ${registry}"
                sh "docker tag ${registry} ${registry}:v.${BUILD_NUMBER}"
                sh "docker push ${registry}:v.${BUILD_NUMBER}"
                echo "--------------------------OK--------------------------"
            }
        }
        stage("Cleaning build environment"){
            steps{
                echo "Removing unused images..."
                sh "docker system prune -a --volumes -f"
                echo "--------------------------OK--------------------------"
            }
        }
    }
}